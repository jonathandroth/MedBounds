% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lb_frac_affected.R
\name{breakdown_defier_share}
\alias{breakdown_defier_share}
\title{Finds the minimum number of defiers compatible with the sharp null}
\usage{
breakdown_defier_share(
  df,
  d,
  m,
  y,
  at_group = NULL,
  w = NULL,
  continuous_Y = base::ifelse(is.null(num_Ybins), TRUE, FALSE),
  num_Ybins = NULL
)
}
\arguments{
\item{df}{A data frame}

\item{d}{Name of the treatment variable in the df}

\item{m}{Vector of the mediator variable}

\item{y}{Name of the outcome variable}

\item{at_group}{(Optional) Value of m specifying which always-takers to compute lower bounds of TV for.
If at_group is specified, then we compute a lower bound on TV between Y(1,at_group) and Y(0,at_group) for
ATs who have M(1)=M(0)=at_group. If at_group is null (the default), we compute a lower bound on
the weighted average of TV across all always-takers, with weights proportional to shares in population}

\item{w}{(Optional) Name of weighting variable. If null, equal weights are used}

\item{continuous_Y}{(Optional) Whether Y should be treated as continuous, in which case kernel density is used, or discrete. Default is TRUE.}

\item{num_Ybins}{(Optional) If specified, Y is discretized into the given number of bins (if num_Ybins is larger than the number of unique values of Y, no changes are made)}
}
\description{
This function finds the minimum value of max_defiers_share such that compute_tv_ats_multiple_m returns zero
}
